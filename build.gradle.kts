/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 */

plugins {
    // Apply the Kotlin JVM plugin to add support for Kotlin.
    // versinya harus dideklarasikan sekali di rootnya, sehingga pada module-modulenya hapus aja versionnya
    id("org.jetbrains.kotlin.jvm") version "1.3.72"

    // Apply the application plugin to add support for building a CLI application.
    application
}

// Dependency Management
repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()

    // biasa digunakan untuk project android
    // google()

    // private repository
    maven {
        url = uri("https://contohweb.com/maven")
    }
}

// Dependency Management
dependencies {

    // implementation : dependency yang digunakan oleh kode program dan bisa digunakan oleh kode test kita
    // testImplementation : dependency yang hanya digunakan oleh kode test kita

    // Align versions of all Kotlin components
    implementation(platform("org.jetbrains.kotlin:kotlin-bom"))

    // Use the Kotlin JDK 8 standard library.
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")

    // Use the Kotlin test library.
    testImplementation("org.jetbrains.kotlin:kotlin-test")

    // Use the Kotlin JUnit integration.
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit")

    // Add coroutine
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.7")

    implementation("com.google.code.gson:gson:2.10.1")

    // import module ke dalam dependency agar bisa digunakan di root project
    implementation(project(":module-model"))
    implementation(project(":module-util"))
}

// application {
//     // Define the main class for the application.
//     mainClassName = "PZN_5_Gradle.AppKt"
// }

application (Action {
    mainClassName = "PZN_5_Gradle.AppKt"
})

// Membuat Task - gradle helloyoga
tasks.register("helloyoga") {
    doFirst {
        println("Hello ")
    }
    doLast {
        println("Yoga")
    }
}

// Menggunakan Gradle Properties
tasks.register("author") {

    // nama harus sama dengan key
    val author: String by project
    val email: String by project
    doLast {
        println("Author ${author}:${email}")
    }
}

// Kompilasi semua kode program
// gradle classes

// Kompilasi dan Menjalankan unit test
// gradle test


// Membuat Distribution File
// gradle distTar (Max, Linux)
// gradle distZip (Windows)
// Hasil distribution file bisa kita lihat direktori build/distributions


//Membuat Module Baru
// ‚óè Untuk membuat module baru, di dalam project yang sudah ada, kita hanya tinggal membuat folder
// baru, lalu buat gradle project baru menggunakan perintah gradle init gunakan tipe library
// karena library maka tidak bisa menggunakan perintah gradle run


// Menjalankan Task untuk Modul
// gradle namamodule:name-task



